#!/usr/bin/env python3
"""
Batch convert Traditional Chinese to Simplified Chinese in TypeScript/TSX files
"""

import os
import re
from pathlib import Path

def convert_traditional_to_simplified(text):
    """Convert Traditional Chinese to Simplified Chinese"""
    # Common Traditional to Simplified mappings
    mappings = {
        '傳統': '传统', '創建': '创建', '創意': '创意', '點擊': '点击', '標籤': '标签',
        '節點': '节点', '連結': '链接', '連接': '连接', '線條': '线条', '樣式': '样式',
        '設置': '设置', '顯示': '显示', '隱藏': '隐藏', '載入': '载入', '狀態': '状态',
        '統計': '统计', '圖表': '图表', '圖例': '图例', '模擬': '模拟', '導向': '导向',
        '行為': '行为', '縮放': '缩放', '位置': '位置', '更新': '更新', '添加': '添加',
        '刪除': '删除', '編輯': '编辑', '預覽': '预览', '生成': '生成', '發送': '发送',
        '接收': '接收', '錯誤': '错误', '警告': '警告', '提示': '提示', '確認': '确认',
        '取消': '取消', '確定': '确定', '關閉': '关闭', '打開': '打开', '保存': '保存',
        '另存': '另存', '導出': '导出', '導入': '导入', '打印': '打印', '複製': '复制',
        '粘貼': '粘贴', '剪切': '剪切', '撤銷': '撤销', '重做': '重做', '知識': '知识',
        '圖譜': '图谱', '輿情': '舆情', '分析': '分析', '深度': '深度', '討論': '讨论',
        '熱度': '热度', '情感': '情感', '正面': '正面', '負面': '负面', '中性': '中性',
        '關鍵': '关键', '核心': '核心', '價值': '价值', '社交': '社交', '場景': '场景',
        '時刻': '时刻', '參與': '参与', '友善': '友善', '品牌': '品牌', '經典': '经典',
        '組合': '组合', '休閒': '休闲', '聊天': '聊天', '配餐': '配餐', '首選': '首选',
        '輕鬆': '轻松', '氛圍': '氛围', '營造': '营造', '蛋撻': '蛋挞', '文件': '文件',
        '文件夾': '文件夹', '路徑': '路径', '名稱': '名称', '擴展': '扩展', '格式': '格式',
        '大小': '大小', '類型': '类型', '編碼': '编码', '字符': '字符', '控制台': '控制台',
        '日誌': '日志', '調試': '调试', '測試': '测试', '運行': '运行', '部署': '部署',
        '配置': '配置', '環境': '环境', '變量': '变量', '常量': '常量', '函數': '函数',
        '方法': '方法', '類別': '类别', '對象': '对象', '屬性': '属性', '事件': '事件',
        '監聽': '监听', '回調': '回调', '異步': '异步', '同步': '同步', '按鈕': '按钮',
        '輸入': '输入', '輸出': '输出', '表單': '表单', '選項': '选项', '選擇': '选择',
        '單選': '单选', '多選': '多选', '下拉': '下拉', '滑塊': '滑块', '進度': '进度',
        '加載': '加载', '刷新': '刷新', '搜索': '搜索', '篩選': '筛选', '排序': '排序',
        '分組': '分组', '分類': '分类', '標記': '标记', '註釋': '注释', '時間': '时间',
        '日期': '日期', '時鐘': '时钟', '計時': '计时', '延遲': '延迟', '超時': '超时',
        '定時': '定时', '週期': '周期', '頻率': '频率', '間隔': '间隔', '顏色': '颜色',
        '背景': '背景', '邊框': '边框', '邊距': '边距', '填充': '填充', '對齊': '对齐',
        '居中': '居中', '靠左': '靠左', '靠右': '靠右', '頂部': '顶部', '底部': '底部',
        '左側': '左侧', '右側': '右侧', '寬度': '宽度', '高度': '高度', '尺寸': '尺寸',
        '比例': '比例', '透明度': '透明度', '陰影': '阴影', '圓角': '圆角', '數據': '数据',
        '數據庫': '数据库', '字段': '字段', '記錄': '记录', '查詢': '查询', '索引': '索引',
        '主鍵': '主键', '外鍵': '外键', '關係': '关系', '報表': '报表', '網絡': '网络',
        '網路': '网路', '連接': '连接', '請求': '请求', '響應': '响应', '狀態碼': '状态码',
        '重試': '重试', '緩存': '缓存', '會話': '会话', '安全': '安全', '加密': '加密',
        '解密': '解密', '密碼': '密码', '認證': '认证', '授權': '授权', '權限': '权限',
        '角色': '角色', '用戶': '用户', '登錄': '登录', '註銷': '注销', '註冊': '注册',
        '驗證': '验证', '令牌': '令牌', '密鑰': '密钥', '組件': '组件', '模塊': '模块',
        '插件': '插件', '擴展': '扩展', '庫': '库', '框架': '框架', '平台': '平台',
        '系統': '系统', '應用': '应用', '程序': '程序', '則': '则', '則真實': '则真实',
        '則討論': '则讨论', '這是': '这是', '我的': '我的', '可以': '可以', '需要': '需要',
        '使用': '使用', '正在': '正在', '已經': '已经', '完成': '完成', '進行': '进行',
        '開始': '开始', '結束': '结束', '暫停': '暂停', '繼續': '继续', '停止': '停止',
        '重啟': '重启', '重置': '重置', '恢復': '恢复', '備份': '备份', '還原': '还原',
        '清理': '清理', '優化': '优化', '改進': '改进', '增強': '增强', '減少': '减少',
        '增加': '增加', '裡': '里', '麼': '么', '個': '个', '來': '来', '對': '对',
        '時': '时', '會': '会', '開': '开', '關': '关', '長': '长', '現': '现',
        '應': '应', '將': '将', '從': '从', '讓': '让', '為': '为', '過': '过',
        '還': '还', '問': '问', '見': '见', '實': '实', '樣': '样', '機': '机',
        '動': '动', '點': '点', '線': '线', '語': '语', '話': '话', '頭': '头',
        '體': '体', '國': '国', '產': '产', '業': '业', '務': '务', '場': '场',
        '營': '营', '經': '经', '濟': '济', '費': '费', '資': '资', '產': '产',
        '價': '价', '錢': '钱', '買': '买', '賣': '卖', '購': '购', '進': '进',
        '齣': '出', '來': '来', '發': '发', '現': '现', '變': '变', '讓': '让',
        '給': '给', '這': '这', '那': '那', '裡': '里', '邊': '边', '後': '后',
        '內': '内', '員': '员', '萬': '万', '與': '并', '並': '并', '兩': '两',
        '雙': '双', '單': '单', '獨': '独', '門': '门', '間': '间', '燈': '灯',
        '電': '电', '國': '国', '問': '问', '見': '见', '頭': '头', '體': '体',
        '國': '国', '產': '产', '業': '业', '務': '务', '場': '场', '營': '营',
        '經': '经', '濟': '济', '費': '费', '資': '资', '產': '产', '價': '价',
        '錢': '钱', '買': '买', '賣': '卖', '購': '购', '進': '进', '齣': '出',
        '來': '来', '發': '发', '現': '现', '變': '变', '讓': '让', '給': '给',
        '這': '这', '那': '那', '裡': '里', '邊': '边', '後': '后', '內': '内',
        '員': '员', '萬': '万', '與': '并', '並': '并', '兩': '两', '雙': '双',
        '單': '单', '獨': '独', '門': '门', '間': '间', '燈': '灯', '電': '电'
    }
    
    for traditional, simplified in mappings.items():
        text = text.replace(traditional, simplified)
    return text

def process_file(file_path):
    """Process a single TypeScript/TSX file"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # Convert Traditional Chinese to Simplified Chinese
        converted_content = convert_traditional_to_simplified(content)
        
        # Only write if content changed
        if content != converted_content:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(converted_content)
            print(f"✅ Converted: {file_path}")
            return True
        else:
            print(f"⏭️  No changes needed: {file_path}")
            return False
            
    except Exception as e:
        print(f"❌ Error processing {file_path}: {e}")
        return False

def main():
    """Main function to process all TypeScript/TSX files"""
    src_dir = Path("src")
    
    if not src_dir.exists():
        print("❌ src directory not found!")
        return
    
    # Find all TypeScript/TSX files
    ts_files = list(src_dir.rglob("*.ts")) + list(src_dir.rglob("*.tsx"))
    
    if not ts_files:
        print("❌ No TypeScript files found!")
        return
    
    print(f"🚀 Found {len(ts_files)} TypeScript files to process...")
    
    converted_count = 0
    for file_path in ts_files:
        if process_file(file_path):
            converted_count += 1
    
    print(f"\n🎉 Conversion complete! Converted {converted_count} files.")

if __name__ == "__main__":
    main()